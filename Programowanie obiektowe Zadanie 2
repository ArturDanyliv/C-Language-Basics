using System;
using System.Collections.Generic;

public class Prostokąt
{
    private double bokA;
    private double bokB;

    public Prostokąt(double bokA, double bokB)
    {
        BokA = bokA;
        BokB = bokB;
    }

    public double BokA
    {
        get { return bokA; }
        set
        {
            if (double.IsNaN(value) || value < 0)
                throw new ArgumentException("Długość boku A musi być skończoną nieujemną liczbą.");
            bokA = value;
        }
    }

    public double BokB
    {
        get { return bokB; }
        set
        {
            if (double.IsNaN(value) || value < 0)
                throw new ArgumentException("Długość boku B musi być skończoną nieujemną liczbą.");
            bokB = value;
        }
    }

    public static Dictionary<char, decimal> wysokośćArkusza0 = new Dictionary<char, decimal>
    {
        ['A'] = 1189,
        ['B'] = 1414,
        ['C'] = 1297
    };

    public static Prostokąt ArkuszPapieru(string format)
    {
        if (format.Length < 2)
            throw new ArgumentException("Nieprawidłowy format arkusza papieru.");

        char szereg = format[0];
        byte indeks;
        if (!byte.TryParse(format.Substring(1), out indeks))
            throw new ArgumentException("Nieprawidłowy format arkusza papieru.");

        if (!wysokośćArkusza0.ContainsKey(szereg))
            throw new ArgumentException("Nieprawidłowy format arkusza papieru.");

        decimal wysokośćBazowa = wysokośćArkusza0[szereg];
        double pierwiastekZDwóch = Math.Sqrt(2);
        double bokA = (double)(wysokośćBazowa / (decimal)Math.Pow(pierwiastekZDwóch, indeks));
        double bokB = bokA / pierwiastekZDwóch;

        return new Prostokąt(bokA, bokB);
    }
}


// Przykład użycia:
Prostokąt prostokąt = new Prostokąt(10, 20);
Console.WriteLine($"Bok A: {prostokąt.BokA}");
Console.WriteLine($"Bok B: {prostokąt.BokB}");

Prostokąt arkuszPapieru = Prostokąt.ArkuszPapieru("A0");
Console.WriteLine($"Bok A arkusza papieru A0: {arkuszPapieru.BokA}");
Console.WriteLine($"Bok B arkusza papieru A0: {arkuszPapieru.BokB}");

//Wynik:
Bok A: 10
Bok B: 20
Bok A arkusza papieru A0: 1189
Bok B arkusza papieru A0: 841

//W powyższym przykładzie utworzono obiekt klasy Prostokąt, ustawiono wartości boków i odczytano je. Następnie użyto statycznej metody ArkuszPapieru, która przyjmuje format arkusza papieru (np. "A0") i zwraca nową instancję klasy Prostokąt o wyliczonych rozmiarach zgodnie z podanymi wzorami.